@using BlazorAgenda.Client.Viewmodels
@using BlazorAgenda.Shared.Models
@using BlazorAgenda.Shared.Enums
@inherits AppointmentJobViewModel

<form onsubmit="@SubmitEventOptions" class="container-fluid">
    <fieldset class="">
        <div class="OptionGrid">
            @if (StateService.Organization is Organization)
            {
                <!-- Job -->
                <div class="OptionContainer">
                    <span class="OptionLabel">
                        <label class="">Service</label>
                    </span>
                    <span class="OptionInputContainer">
                        <select onchange="@SetEventJob" required class="OptionInput">
                            @if (Event.Job == null)
                            {
                                <option value="" selected disabled hidden>-- Choose a job --</option>
                            }
                            @foreach (Job job in StateService.Organization.Job)
                            {
                                if (job.Id == Event.JobId)
                                {
                                    <option value="@job.Id" selected>@job.Name</option>
                                }
                                else
                                {
                                    <option value="@job.Id">@job.Name</option>
                                }
                            }
                        </select>
                    </span>
                </div>
                @if (SelectedJobUsers.Count != 0)
                {
                    <!-- User -->
                    <div class="OptionContainer">
                        <span class="OptionLabel">
                            <label class="">Employee</label>
                        </span>
                        <span class="OptionInputContainer">
                            <select onchange="@SetEventUser" required class="OptionInput">
                                @if (Event.User == null)
                                {
                                    <option value="" selected disabled hidden>-- Choose an employee --</option>
                                }
                                @*@if (Event.UserId == -1)
                                {
                                    <option selected value="-1">No preference</option>
                                }*@

                                @foreach (User user in SelectedJobUsers)
                                {
                                    if (user.Id == Event.UserId)
                                    {
                                        <option value="@user.Id" selected>@user.Firstname @user.Lastname</option>
                                    }
                                    else
                                    {
                                        <option value="@user.Id">@user.Firstname @user.Lastname</option>
                                    }
                                }
                            </select>
                        </span>
                    </div>
                }
                @foreach (Option option in Options)
                {
                    <div class="OptionContainer">
                        <span class="OptionLabel">
                            @if (option.IsMandatory)
                            {
                                <label>*@option.Text</label>
                            }
                            else
                            {
                                <label>@option.Text</label>
                            }
                        </span>
                        <span class="OptionInputContainer">
                            @if (Event.EventOption.Where(evOption => evOption.OptionId == option.Id).ToList() is List<EventOption> eventOptions
                                 && eventOptions.Count != 0 && eventOptions[0] != null && eventOptions[0] != default)
                            {
                                <OptionTypeComponent Option="@option" EventOptions="@eventOptions" OnNewEventOptions="@(neweventOptions => AddNewEventOptions(neweventOptions))"  OnSetMultiEventOptions="@(multiEventOptions => SetMultiEventOptions(multiEventOptions, option))" />

                            }
                            else    
                            {
                                <OptionTypeComponent Option="@option" OnNewEventOptions="@(neweventOptions => AddNewEventOptions(neweventOptions))" OnSetMultiEventOptions="@(multiEventOptions => SetMultiEventOptions(multiEventOptions, option))" />
                            }
                        </span>
                    </div>
                }
            }
        </div>
        <button type="submit" value="Submit" class="appointmentNavigationButton continueNavigationButton">
            continue
            <span>
                <i class="oi oi-arrow-right" />
            </span>
        </button>
    </fieldset>
</form>
