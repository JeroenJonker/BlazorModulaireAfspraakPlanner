@using BlazorAgenda.Client.Viewmodels;
@using BlazorAgenda.Shared.Models;
@using BlazorAgenda.Client.Views.BaseViews
@using BlazorAgenda.Shared.Enums
@inherits OptionViewModel

<ModalTemplateView Title="@Title" IsVisible="true" OnClose="@OnClose" OnSubmit="@Save">
    <ModalContent>
        <div class="form-row">
            <span class="col-sm-5">
                <label class="col-form-label">Text</label>
            </span>
            <span class="col-sm-7 input-group">
                <div class="input-group-prepend">
                    <span class="input-group-text"><i class="oi oi-text"></i></span>
                </div>
                <input class="form-control" type="text" placeholder="Text" bind="@Option.Text" required/>
            </span>
        </div>
        <div class="form-row">
            <span class="col-sm-5">
                <label class="col-form-label">Description</label>
            </span>
            <span class="col-sm-7 input-group">
                <div class="input-group-prepend">
                    <span class="input-group-text"><i class="oi oi-tag"></i></span>
                </div>
                <input class="form-control" type="text" placeholder="Description" bind="@Option.Description" />
            </span>
        </div>
        <div class="form-row">
            <span class="col-sm-5">
                <label class="col-form-label">Field type</label>
            </span>
            <span class="col-sm-7 input-group">
                <div class="input-group-prepend">
                    <span class="input-group-text"><i class="oi oi-puzzle-piece"></i></span>
                </div>
                <select class="form-control" bind="@SelectedElementType">
                    @foreach (ElementTypes elementType in AvailableElementTypes)
                    {
                        <option value="@elementType" selected="@(nameof(elementType) == SelectedElementType )">@elementType</option>
                    }
                </select>
            </span>
        </div>
        @if ((ElementTypes)Option.ElementType == ElementTypes.Dropdown || (ElementTypes)Option.ElementType == ElementTypes.MultiSelect)
        {
        <div class="form-row">
            <span class="col-sm-5">
                <label class="col-form-label">Dropdown items</label>
            </span>
            <button type="button" onclick="@AddDropdownItem"><span class="oi oi-plus" /></button>

        </div>
            @if (DropdownItemOptions.Count > 0)
            {
            <div class="container">
                <table class="dropdownItemsTable">
                    <thead>
                        <tr>
                            <th>Text</th>
                            <th>Description</th>
                            <th>Duration</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (Option dropdownItem in DropdownItemOptions)
                        {
                            <tr>
                                <th><input type="text" class="optionTableInput" bind="@dropdownItem.Text" /></th>
                                <th><input type="text" class="optionTableInput" bind="@dropdownItem.Description" /></th>
                                <th><input type="number" class="optionTableInput" bind="@dropdownItem.TimeModifier" min="0" step="5" /></th>
                                <th> <button type="button" onclick="@(() => RemoveDropdownItem(dropdownItem))"><span class="oi oi-trash" /></button></th>

                            </tr>
                        }
                    </tbody>
                </table>

            </div>
            }
        }
        @if ((ElementTypes)Option.ElementType == ElementTypes.Check)
        {
            <div class="form-row">
                <span class="col-sm-5">
                    <label class="col-form-label">Duration in minutes</label>
                </span>
                <span class="col-sm-7 input-group">
                    <div class="input-group-prepend">
                        <span class="input-group-text"><i class="oi oi-timer"></i></span>
                    </div>
                    <input class="form-control" type="number" step="5" min="0" value="0" bind="@Option.TimeModifier" />
                </span>
            </div>
        }
        <div class="form-row">
            <span class="col-sm-5">
                <label class="col-form-label">Mandatory</label>
            </span>
            <span class="col-sm-7 input-group">
                <div class="input-group-prepend">
                    <span class="input-group-text"><i class="oi oi-warning"></i></span>
                </div>
                <label class="Ccontainer">
                    <input class="form-control checkbox OptionInput" type="checkbox" bind="@Option.IsMandatory" />
                    <span class="CheckMarkForm Ccheckmark"></span>
                </label>
            </span>
        </div>
    </ModalContent>
    <FooterContent>
        @if (Option.Id != default)
        {
            <ObjectBaseFooterView ObjectState="@BlazorAgenda.Shared.Enums.ObjectState.Edit" OnDelete="@Delete" />
        }
        else
        {
            <ObjectBaseFooterView ObjectState="@BlazorAgenda.Shared.Enums.ObjectState.Add" />
        }
    </FooterContent>
</ModalTemplateView>