@using BlazorAgenda.Shared.Enums;
@using BlazorAgenda.Shared.Models;
@using BlazorAgenda.Shared.Interfaces.BaseObjects;
@using BlazorAgenda.Services.Interfaces;

@switch (ElementType)
{
    case ElementTypes.Text:
        <input class="form-control" type="text" bind="@EventOption.Value" />
        break;
    case ElementTypes.Check:
        <input class="form-control" type="checkbox" bind="@EventOption.Value" />
        break;
    case ElementTypes.Number:
        <input class="form-control" type="number" bind="@EventOption.Value" />
        break;
    case ElementTypes.Telephonenumber:
        <input class="form-control" type="tel" pattern="[0-9]{8}" bind="@EventOption.Value" />
        break;
    case ElementTypes.Address:
        <input class="form-control" type="text" pattern="^\d{4}\D{2}$" bind="@EventOption.Value" />
        break;
    case ElementTypes.Date:
        <input class="form-control" type="date" bind="@EventOption.Value" />
        break;
    case ElementTypes.Email:
        <input class="form-control" type="email" bind="@EventOption.Value" />
        break;
    case ElementTypes.StaffSelection:
        <select bind="@EventOption.Value">
            <option selected>-- Choose a staffmember --</option>
            @foreach (User dropdownItem in StaffMembers)
            {
            <option value="@dropdownItem.Emailadress">"@dropdownItem.Firstname @dropdownItem.Lastname"</option>
            }
        </select>
        break;
    case ElementTypes.Dropdown:
        <select bind="@EventOption.Value">
            <option selected>-- Choose an option --</option>
            @foreach (Option dropdownItem in DropdownItems)
            {
            <option value="@dropdownItem.Text">"@dropdownItem.Text"</option>
            }
        </select>
        break;
        @*case ElementTypes.MultiSelect:
                <input class="form-control" type="email" bind="@EventOption.Value" />
                break;
        case ElementTypes.Radiobutton:
            <input class="form-control" type="checkbox" bind="@EventOption.Value" />
            break;*@
}

@functions
{
    [Parameter] protected ElementTypes ElementType { get; set; }
    [Inject] protected IEventOption EventOption { get; set; }
    [Inject] protected IUserService UserService { get; set; }
    [Inject] protected IOptionService OptionService { get; set; }
    [Inject] protected IStateService StateService { get; set; }
    public List<User> StaffMembers { get; set; }
    public List<Option> DropdownItems { get; set; }

    protected override async Task OnInitAsync()
    {
        if (ElementType == ElementTypes.StaffSelection)
        {
            StaffMembers = await UserService.GetStaffByOrganization(StateService.Organization);
        }
        else if (ElementType == ElementTypes.Dropdown)
        {
            //DropdownItems = await OptionService.
        }
    }
}
